# -*- coding:utf-8 -*-
# Date   : 2023/3/31 - 10:21
# Author : Ding Ning

import json
import base64
import binascii
from Crypto.Cipher import AES
from library.log import Logger
from urllib.parse import unquote


class MData:
    def __init__(self, data=b"", character_set='utf-8'):
        # data肯定为bytes
        self.data = data
        self.characterSet = character_set

    def save_data(self, file_name):
        with open(file_name, 'wb') as f:
            f.write(self.data)

    def from_string(self, data):
        self.data = data.encode(self.characterSet)
        return self.data

    def from_base64(self, data):
        self.data = base64.b64decode(data.encode(self.characterSet))
        return self.data

    def from_hex_str(self, data):
        self.data = binascii.a2b_hex(data)
        return self.data

    def to_string(self):
        return self.data.decode(self.characterSet)

    def to_base64(self):
        return base64.b64encode(self.data).decode()

    def to_hex_str(self):
        return binascii.b2a_hex(self.data).decode()

    def to_bytes(self):
        return self.data

    def __str__(self):
        # noinspection PyBroadException
        try:
            return self.to_string()
        except Exception:
            return self.to_base64()


class AEScryptor:
    def __init__(self, aes_key, mode=AES.MODE_CBC, aes_iv=b'', padding_mode="PKCS7Padding", character_set="utf-8"):
        """
        构建一个AES对象
        key: 秘钥，字节型数据
        mode: 使用模式，只提供两种，AES.MODE_CBC, AES.MODE_ECB
        iv： iv偏移量，字节型数据
        paddingMode: 填充模式，默认为NoPadding, 可选NoPadding，ZeroPadding，PKCS5Padding，PKCS7Padding
        characterSet: 字符集编码
        """
        self.key = aes_key
        self.mode = mode
        self.iv = aes_iv
        self.characterSet = character_set
        self.paddingMode = padding_mode
        self.data = b''
        self.log = Logger().logger

    @staticmethod
    def zero_padding(data):
        data += b'\x00'
        while len(data) % 16 != 0:
            data += b'\x00'
        return data

    @staticmethod
    def strip_zero_padding(data):
        data = data[:-1]
        while len(data) % 16 != 0:
            data = data.rstrip(b'\x00')
            if data[-1] != b"\x00":
                break
        return data

    @staticmethod
    def pkcs5_7padding(data):
        need_size = 16 - len(data) % 16
        if need_size == 0:
            need_size = 16
        return data + need_size.to_bytes(1, 'little') * need_size

    @staticmethod
    def strip_pkcs5_7padding(data):
        padding_size = data[-1]
        return data.rstrip(padding_size.to_bytes(1, 'little'))

    def padding_data(self, data):
        if self.paddingMode == "NoPadding":
            if len(data) % 16 == 0:
                return data
            else:
                return self.zero_padding(data)
        elif self.paddingMode == "ZeroPadding":
            return self.zero_padding(data)
        elif self.paddingMode == "PKCS5Padding" or self.paddingMode == "PKCS7Padding":
            return self.pkcs5_7padding(data)
        else:
            print("不支持Padding")

    def strip_padding_data(self, data):
        if self.paddingMode == "NoPadding":
            return self.strip_zero_padding(data)
        elif self.paddingMode == "ZeroPadding":
            return self.strip_zero_padding(data)

        elif self.paddingMode == "PKCS5Padding" or self.paddingMode == "PKCS7Padding":
            return self.strip_pkcs5_7padding(data)
        else:
            print("不支持Padding")

    def set_character_set(self, character_set):
        """
        设置字符集编码
        characterSet: 字符集编码
        """
        self.characterSet = character_set

    def set_padding_mode(self, mode):
        """
        设置填充模式
        mode: 可选NoPadding，ZeroPadding，PKCS5Padding，PKCS7Padding
        """
        self.paddingMode = mode

    def decrypt_from_base64(self, entext):
        """
        从base64编码字符串编码进行AES解密
        entext: 数据类型str
        """
        m_data = MData(character_set=self.characterSet)
        self.data = m_data.from_base64(entext)
        return self.decrypt()

    def decrypt_from_hex_str(self, entext):
        """
        从hexstr编码字符串编码进行AES解密
        entext: 数据类型str
        """
        m_data = MData(character_set=self.characterSet)
        self.data = m_data.from_hex_str(entext)
        return self.decrypt()

    def decrypt_from_string(self, entext):
        """
        从字符串进行AES解密
        entext: 数据类型str
        """
        m_data = MData(character_set=self.characterSet)
        self.data = m_data.from_string(entext)
        return self.decrypt()

    def decrypt_from_bytes(self, entext):
        """
        从二进制进行AES解密
        entext: 数据类型bytes
        """
        self.data = entext
        return self.decrypt()

    def encrypt_from_string(self, data):
        """
        对字符串进行AES加密
        data: 待加密字符串，数据类型为str
        """
        self.data = data.encode(self.characterSet)
        return self.encrypt()

    def encrypt(self):
        if self.mode == AES.MODE_CBC:
            new_aes = AES.new(self.key, self.mode, self.iv)
        elif self.mode == AES.MODE_ECB:
            new_aes = AES.new(self.key, self.mode)
        else:
            print("不支持这种模式")
            return

        data = self.padding_data(self.data)
        en_data = new_aes.encrypt(data)
        return MData(en_data)

    def decrypt(self):
        if self.mode == AES.MODE_CBC:
            new_aes = AES.new(self.key, self.mode, self.iv)
        elif self.mode == AES.MODE_ECB:
            new_aes = AES.new(self.key, self.mode)
        else:
            print("不支持这种模式")
            return
        data = new_aes.decrypt(self.data)
        m_data = MData(self.strip_padding_data(data), character_set=self.characterSet)
        return m_data

    def encode(self, text):
        """
        加密
        :param text:
        :return:
        """
        if isinstance(text, dict):
            text = json.dumps(text)
        r_data = self.encrypt_from_string(text)
        en_data = r_data.to_base64()
        # self.log.info(f'加密：{en_data}')
        return en_data

    def decode(self, text):
        """
        解密
        :param text:
        :return:
        """
        if len(text) % 3 != 0:
            x = len(text) % 3
            x_str = '=' * x
            text += x_str
        after_data = unquote(text, 'utf-8') if '%' in text else text
        r_data = self.decrypt_from_base64(after_data)
        # self.log.info(f'解密：{r_data}')
        return r_data

    def decode_for_data(self, in_data):
        """
        解析内容
        :param in_data:
        :return:
        """
        in_data = self.decode(in_data)
        in_data_str = str(in_data)
        in_data_json = json.loads(in_data_str)
        return in_data_json


class AesForReturnUrl:
    def __init__(self):
        self.key = 'BBSWA166442B66F0'
        self.vi = 'b8a4c89cdc776729'
        block_size = 16
        self.pad = lambda s: s + (block_size - len(s) % block_size) * chr(block_size - len(s) % block_size)
        self.unpad = lambda s: s[:-ord(s[len(s) - 1:])]

    def aes_enczetpt(self, encode_data):
        encode_data = self.pad(encode_data)
        cipher = AES.new(self.key.encode('utf8'), AES.MODE_CBC, self.vi.encode('utf8'))
        encryptedbytes = cipher.encrypt(encode_data.encode('utf8'))
        encodestrs = base64.b64encode(encryptedbytes)
        enc_text = encodestrs.decode('utf8')
        return enc_text

    def aes_decrypt(self, encode_data):
        encode_data = encode_data.encode('utf8')
        encodebytes = base64.decodebytes(encode_data)
        cipher = AES.new(self.key.encode('utf8'), AES.MODE_CBC, self.vi.encode('utf8'))
        text_decrypted = cipher.decrypt(encodebytes)
        text_decrypted = self.unpad(text_decrypted)
        text_decrypted = text_decrypted.decode('utf8')
        print(text_decrypted)
        return text_decrypted


if __name__ == '__main__':
    key = b"BBSWA166442B66F0"
    iv = b"b8a4c89cdc776729"
    aes = AEScryptor(key, AES.MODE_CBC, iv, padding_mode="PKCS7Padding", character_set='utf-8')
    afr = AesForReturnUrl()
    # res1 = aes.decode_for_data(source_data)
    # res2 = aes.decode('z7xDqEvbYV6qoVCOm0suZpUYSGHppPPZMP/k8kReqhIz9JMhiiVRQphVtuATIhcw+5wwtzkwrccRfh6/UVwwcWloJlcb76L1XD295g/lVZcJJAZOQRYf9ZxQGK7wEVX4')
    # res2 = aes.decode_for_data('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')
    # res3 = aes.decode_for_data('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')
    # aes.decode_for_data('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')
    # res4 = aes.encode(res1)
    # print(res4)
    res = aes.decode_for_data('x70bAr20Y+g3s7WASEWd9jfk5gfu8qO20uzzWFwftMKx02aVkyfnNGS0vLt1cVOydpvqewAkRYsQuis7mQ6WSjlSr9bE+r37D6EyUCQeRiH+LwlBHywOTXiw2YCMRjUWEpTIrUw1MHemuDTPkWKoprY9OyEVXZ6/DovqSCPz0nDjqYFPJDv4VbfD19w7QhkILF2DO13KsJJztCfNEBPRIyYTjXVj5Q0JXJ8Ug3fwQOo=')
    res1 = aes.decode_for_data('ivOPGmpX13GF5LoJM3fB1iiVmAocodtVdViWhANt4UmCnS/SRB0qRHtSaHeDBWMEyxZlE2gkLSJnhU7cqTVg8ac8t66Je/41 vONGpTv3MraJHWBTfCr0tfdU4vYo00RqIuzal9/0 CYUcjldh6q/kh9WUzB9hhnWu55xAY7fPyXvZimBg3LVIzutTgPwLQ7zlDgiKSfIx3xCeu/TwFo724pBXCXcVPVPr5jr+WriNTJEdEs75prL/VMIS478z22R4b4j8eI+D2rdbho8Nqp+8 l1i44dWFSvNGPOjCAWB+d9c39UZY86VR/av4oZa99BH/lNhWyLJ+1 zNaP9LZIR7WoLyaDyfhVN3O/4 bPlPKhoY3dYlsWauGA9DEuKnCmHi2fgI0IPEZvH796FnRUXrgGHus/yYHUoCZvoTWDv1M6E9MY0mh/I+Pr24qT5Qct6mYn/PkX4EdgHcavzbucjUMksr6x69DtPMetrnRNKIGBXxD0JRvbBS37w4Cx9IEr+4 LWgz4pj8FEWmPZwkKC/W1CAZZHnXkYS+6 Fq+pnF770CpU7dm1VVC6Nd5Aci+X0P5eNXUDif9ViQIlBuUb3Dc0/8 N/l9R22kCO5xkBk0SNCtDM/1 AW1kHNw2erdVZZTLSIx4BBpYmR+LQW0lR8DuLQod2k+gzwwC7aSz3Lgaq/die025NG7QhvUuLUdLJYCzCZjY/RFMJm8QrdQEhqAg8KNEe5chFIAtGR6BZz8Y+9e1 FZpwjmUSMmxQO6T4+wd9g5GphEpTqnbsfkDsZjhbucLy+yqSWPLj+rf8Lxveu4QI4+5 QIQ8kdCutYU3irZbGQ0EoHV/41 tq2/ykdH3n8MO4tCGyalmHD4t7V8uIuzP7bQlicBcATPFjdvZTZUX/WygWD3vmebETxsILcJdpiOSC/fdVHYwtJGWzmQap/yhcm86K+/M1DhvWs/8 fx6KRLpOpWukuU/TXZuknTBAAWHrFcXTtuy5JYlmnoGEBxSOj80KtUCNR4+3 Vg1KqnFNhFQMNFoXqQ8g/KthrCR9L4csiUDyHRim9WN8Euo/1 HA6aV4gExecDJ0Uph8zrzrxSDtTUaAnfqvwssfXhYJM+qal9T0sPHg/xRRKZHaROai5dvbLKO7rXosRH0sI+wMojk8uYxcjPjHLWJqJt0sMTl5gAkfF3qk/u+Z+9 hp0Bq7wT/AYG970zRDS5KbtOGfExx4i2z0zvS+ahL6s/n/lG/Bf30903E1hiCTKJPeUXjaYCLC+zkmJyQV7vdmYgkahjq7xkT4cs0trcWPu+I1AJARgxGhKy1C7OanZgfbyDpqQxlRjGcqd20T2I1rnOU+Dt0PEcj1vP/pbau+kzyD6HVL8mnj0ttbp+jUSs45q41nmJq7aGg4aHvJ+YXncV/y7velhqRhNrk6UYecWZcjzW8jcMqZOUBENJkYx6fQMhwZvSgBjj4FoX2m9bcRJXEqdOt3jMBO4Nfqj9mZq+9 J03G4isLtimaJ5rB2R3lp9WTq2cqmkV8ogIV64Ic5WfbOz4vKIwVMVmvECmCI7O4Qj1BLTm9wckYGirgIPiGckvxbkyM2r0qsb/Np8ajGh1d2dPFsgMUHtMdV6l2a0H1a8Zovs0tIIBo6Vt61RDBb21xlHOkaAVjhUdSIyuj5w7AyIv/CElPvdgYwCNFYm5SeEc9XlpQB7pKv8NMO/yvPSbKLMa3hbUsOMFMETJkpy4JcUNm0Ssv1Yc1OaW0pgIKqmL6ZkFaiRTfJjHJ0vwIvt975Dn3KScCw0O/bqQjpSD6jLpwunTIw/qnj+DFr+CF1xiqs3a3O2XHoPWgA+Mst4fXY3BGdnfcgCDJHDfsNF80oUGc+5 JV9ElEtXDUWB4fx5Fm01xpF3hTlExLJRXOJQ7yKuzMFWLyYurkqf1hfOFzSVMgZ1WrWulKShCwIEwzhWnP5zI2VsVGo9L3R7eO79+8 Yvok6vZpBUtZ5trV1GwOQGAiuCK8yxwQEETEQ+uspfZZ2wuYjcHyYhyAuzrTUMOsZ/HvGiQCjugWn4PJXMIu3W/vtzWgG6TV3+6 A/yY6C76aLm4vz0vqVHi8x5erATRSo4+WVc/ss90FprZJ8wpOSTbj6UORwXUgTCHcf2e9jPfViq6EnRiQ6DVqhp394qzQ28FhIP3zcjWCNPo3yWjQxEnzMt1PDl7B77vNAyPul3CLe/yJHklYaHVaAUd0ABKBh/qKNkzbrFUxAqcA+OOIb5ICxMeH7FqBI1jtp0RH5XdJ5CtgV29jCwJnDzDZZWN+Ny87aETAT/YdM9mw4/7 RP8DN6PNryvs6AOxgN8y+TPTa94nc/OdAtfkxp6R3KtznqDmQ7rSb5pVKt7JIumDWPIM3oBQ4147V23/SsNj2yvp9p3Owljs4RKreWAMapvnrMNjDdhnrikJ30/rleW09kKEef8zOAtvbHKXZlvF1wGVKjWAReeSRsavLym8gUT+zWwMl2iZlS7hQ4OhxAmQ1dSlmvI8L6I3s4Ku2gOedafPhCXzWRC/Ym2IWUdZU+3 McE1Wbf12/AoLLYAM42fQZ6NvQDR7F1F3aTMth6gC1DwSY283ZSBx13SZnduCqXDPz4L3K9Mb8qL5RZTnC0rwVD8mAxT/PgEriezxfNx6qvNc3LGkBuqxVKnIhU1qvwb4+OtOsYjAI+DO+1 p0nNyPQmGRIU8QpYoeweOqnQaPYROF2igiVCEdJ9XyuB56bNkoa+NsB+HOufONNxcKzTkt8N+g0l86wpoN6LKkvJbOuU6yxuvjNRAy/xpUNygAJE8HstGlovT/OkH0MC/3 Y6OjPpY/69 G6JqRphvQNn2upT/hjl0r36zYK1kLt3r9YENL8GjUsmqT0ggKOf9pz6oXJc94YOkC54/sqDoxFVHWXCBaKo4Cs4t0+K+wku8v5OEFjuI2DpKZkOVg1Z4rYTUu7Nll72dfi/JlC3os706N7ARzu/0 wH4pSbWeNPXaPDzWkepR+DO0GBFclyaeui4a0jl0iKmXS6k4k5VwB3kUdlGK4Jb0p809Ijp8RPMCr4YyfoEHEm/UYkCPskMGgLSQt08/8 Br8aKrMrYwXeq6oKrHB7ZenF6ifOBgbwhYJJAoJBZDKbCbb8o9raH9Kvg+k5fg/9 vf6aEVVXkRQyqA9nz1f+8 KURCP0iHAqtAL17Obma/wbksEKCQ7587Ld04TwAIm8A/+aY+SJRf/Sf5ZC4r3Gtc7HzmMAchFdpNswMG51PN+2 HvzvD+o8ttGoTcakQMklyWVy024zGGo4fumvedQo/uExpYHuF8IyAnXSxXIzdicsh1VREQnax8VcgOx1XRLPsunMFpakCAXKzMUNR2NQ6fekl1CdGViBzGSY5O+HB3yh2795tbyBuKWl/NCOEjoN775WAZxCmXCzT0U6CeUh6AeKlt/uYBhxZwYe2OqD6jadD7hsIS79Pp1GOuZTdHxKa6dxbeqoHYLKMYHL4eUcCV0Dr20ENempCK/v/K34L0lVkdbkVBa6KwA1uk506c3yhFD1LLqMA6OpQUfIaGGmyBTZRSUwEWjAPCQeCAexArbVLPEKzp3zQ0Ie+5 DfGc+XCEIjOQ9X7YCRPra3zsOW1y5B7AxCxFUO82/0 turdzzOL5c8Am/4 pTZHQU46DHwtgh2LGJ8k5ZhBYkSKkAZk5ia+BiaUNQoYCugYe2bty0RNIvVX4We7lq5bys5aSZtvsNBYQoD/pgw/IJIexNOZKF8Qp+76 Js8RMOWllY/v7DTE2AGiDP6N2sHWefLX/F33W/FgsKGbOGaoOhmM9WU9NkjRGIv+DJf7sDwXowqVEjYaPW9tU9HQBHfFaNKYiVz7DX88kY6DcuEosx3f963Jk8nkZD9b7MykhziYT+yX7jAc+kFnAOwGWACOFCJUKODm/WPH2s/kidJm2h7I9qsmz01rcHEXeEdt9f5Ow0q3ExD5FphWH4bEKSHat3n5p4cLdOqGPyGtLuXLEdwL1oPzQubuZsEeJ5npXx8E4clnPuCSEy35Owrd0gBNJmt3EBcnbUbKaIXsKcQrFcvs0Fbc6yCxevuXuxjgf03c/wkNWD+i2HSugl2FT6dChEADgpCFNubmtaEK5psrhoFwX7OmlGqy5Yuuqk7aOvkhQSqtDrPNZIsgl0PmMnRbIzUPTteCpzIkMb27tE0F+auakdfJTYUjE9PveeuCnEuggaTY22xUaX4rxGJb8yR6Mt2eMlUC7v/Yux9Ugv0b66UTiiHjD8JBkVm2s71Ncra8GtaMgbuPzZzlMC+tDH4U/DN8H4i6+w9b+3 alfh7q5l7HLiiIII9vYqloLk8MWosKMl0PoKAwC69YL12eu23akKzJU68pzvxuN+8 cRhnKiqqKWRaY+OIGI8iK9zL6f0V7MY9IdYGZXEA7/AAwipCHgXGKOrYslCkYvTTnDlO/g1Tmu6U0GyOi/xheHHU0gjd9pf/KXl/dmb7ZHoq8KgI+YdlyBLuGbmVL29vE8U2gNgDHFO50SvJpjaDPaEwsDBzlb095n2pWc1xLtvru797pBG3bMrnad5H/S9J5sc6mdpPsAol/bjH/D444NaBmAFeEshC+qqJuolGaHaqHmHz5+1 zNSwsuw+EtqnYCrhqbADRhz/vFCW5kZFTDaKmGZfBG87LoFSOL+wpN4DRhjDjOyrSVHL/5 cddgYS5YCoGIu9VoJX5KwvGtfevNju4UwSAV3XZOjeSw5UkFRL/5 WU/ZYJfDZmH3XXqsQXJwLvjhK1qVIVrRyt7qlhrk5Kimrq+1 EZBOR9fXdYaGuBSjlUhl6jz5U1m00tppf6hdfmicuwwURGk3WyUfw0L6LGpUXrkGoQ3mJ8AslYyv3KCidFHSTzo5gpaL9refsGQ4u+jM8l/MyUE5nDVchjciyhQ0FDUrCYNuYJenxRJnLH5oAcYw1ILR0VsPC3O8wJK7Uk7eRhcUU0Z+2 ')
    print(res)
    print(res1)
